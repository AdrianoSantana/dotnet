// <auto-generated />
using System;
using InstituicaoFundo.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InstituicaoFundo.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201125183739_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Fundo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<double>("Saldo")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Fundos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.FundoCotado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ArtigoResolucao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FundoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FundoId");

                    b.ToTable("FundosCotados");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.FundoInstituicao", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FundoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstituicaoId", "FundoId");

                    b.HasIndex("FundoId");

                    b.ToTable("InstituicoesFundos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Instituicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.InstituicaoContato", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContatoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstituicaoId", "ContatoId");

                    b.HasIndex("ContatoId");

                    b.ToTable("InstituicoesContatos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.FundoCotado", b =>
                {
                    b.HasOne("InstituicaoFundo.WebAPI.Models.Fundo", "Fundo")
                        .WithMany("FundosCotados")
                        .HasForeignKey("FundoId");

                    b.Navigation("Fundo");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.FundoInstituicao", b =>
                {
                    b.HasOne("InstituicaoFundo.WebAPI.Models.Fundo", "Fundo")
                        .WithMany("InstituicoesFundos")
                        .HasForeignKey("FundoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InstituicaoFundo.WebAPI.Models.Instituicao", "Instituicao")
                        .WithMany("InstituicoesFundos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fundo");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.InstituicaoContato", b =>
                {
                    b.HasOne("InstituicaoFundo.WebAPI.Models.Contato", "Contato")
                        .WithMany("InstituicoesContatos")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InstituicaoFundo.WebAPI.Models.Instituicao", "Instituicao")
                        .WithMany("InstituicoesContatos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Contato", b =>
                {
                    b.Navigation("InstituicoesContatos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Fundo", b =>
                {
                    b.Navigation("FundosCotados");

                    b.Navigation("InstituicoesFundos");
                });

            modelBuilder.Entity("InstituicaoFundo.WebAPI.Models.Instituicao", b =>
                {
                    b.Navigation("InstituicoesContatos");

                    b.Navigation("InstituicoesFundos");
                });
#pragma warning restore 612, 618
        }
    }
}
